product functions:
• Search the site for different articles in different categories
• Read articles and view citations to learn more about the what the article talks about
• Suggest edits after reading articles
• Users can create accounts and keep track of what they read.
• Users can become reviewers which gives them additional features/privileges.


5. SYSTEM FEATURES
5.1 SIGNING INTO THE WEBSITE
5.1.1 Description and Priority
The requirements of this feature set describe how the system asks the user of the website 
to sign in by providing his/her credentials. The signing up page is displayed to add the 
user to the database by collecting his information and then the login page is displayed
for authentication. The priority is medium since he is not required to sign in to view the 
content but is necessary for editing. (just check the priorities of this and all other features)

5.1.2 Stimulus/Response Sequences
• A new user is asked to sign up to the website. The system stores his credentials in the user database.
• An exisiting user is asked to login to the website. The user types in the correct details. The system logs the user into the website.
• The exisitng user types in wrong credentials. He/she is redirected to the login page to try again.

5.1.3 Functional Requirements
REQ 1: System should be able to ask users its credentials in an easily understandable manner.
REQ 2: Exclusive database for users to help the system verify the details.


5.2 CONTENT SEARCH AND READABILITY
5.2.1 Description and Priority 
The requirements of this feature set describe how the system enables the user to search for his
desired topic and obtain the content of said topic. This feature is of high priority since this
is one of the main end goals of our website.

5.2.2 Stimulus/Response
• A user searches the topic in the search bar of the website. The system directs him to the article accordingly.
• A user searches using the URL/Search Engine directly. The system directs him to the article on the website.

5.2.3 Functional Requirements
REQ 1: System must have the ability to direct to an appropriate article based on the topic.
REQ 2: System should be capable of obtaining the topic asked from the URL query directly.
REQ 3: The content present should be in an orderly and neat manner.
 
 
5.3 SUBMISSION OF EDIT REQUEST BY USER
5.3.1 Description and Priority
The requirements of this feature set describe how the user, if feels like some part of the 
provided content is wrong, must be able to put in an edit request to the system. This feature is 
of high priority.

5.3.2 Stimulus/Response
• User presses a button to edit the page. The system leads him to a page where he/she can carry out the edits.
• The user wants to preview his changes. The system leads him to a page where the final article can be previewed after his changes.
• The user is satisfied with his changes. The system enables him to submit the edit with any comments explaining the cause. 

5.3.3 Functional Requirements
REQ 1: System must provide a comprehensible interface for the user to edit content.
REQ 2: System should let the user preview his final edit before submission of request.


5.4 ABILITY TO VIEW THE PREVIOUS VERSIONS
5.4.1 Description and Priority
The requirements of this feature set describe how the system helps user (and developers)
view the previous versions of the content before it was edited. This is of ____ priority.

5.4.2 Stimulus/Response
• The user wants to view the previous versions of the article. The system provides them with the version history.

5.4.3 Functional Requirements
REQ 1: The version history table the user views must be comprehensible. The user should be able to understand the sequence of the versions.
REQ 2: The system should be able to store all the versions in an exclusive database.


5.5 EDITORS AUTHORISING THE EDIT REQUESTS
5.5.1 Description and Priority
he requirements of this feature set describe how the editors can look over the edit requests
made by the users and accept or reject the requests based on their authenticity. Editors are
required to keep an eye on the requests and maintain the content on the website. This feature
is of ____ priority.

5.5.2 Stimulus/Response
• The editor rejects the edit request. The system does not make any changes to the article in question.
• The editor accepts the request. The system directs him to the content with the edits made and allows them to make their own edits.
• The editor wants to preview changes. The system enables him to view the final version going to be submitted.
• The editor wants to publish the article. The system makes changes to the article on site.

5.5.3 Functional Requirements
REQ 1: System should allow editor to make further changes if desired to the edited article.



GLOSSARY:
Acronyms:
AWS - Amazon Web Services
HTML - Hypertext Markup Language
SQL - Structured Query Language
CSS - Cascading Style Sheets
JS - Javascript
UI/UX - User Interface (or) User Experience
Amazon S3 - Amazon Simple Storage Service - interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web.
Amazon EC2 - Amazon Elastic Compute Cloud 
REST - Representational State Transfer
URL - Uniform Resource Locator


TOOLS USED:

Languages/Frameworks
React: The front end javascript library React is used to build and maintain our User Interfaces (or UI) components. It is one of the most popular and widely used libraries for various frontend tasks.
Flask: This is the python framework we use for developing our web applications since it is capable of RESTful request dispatching and is easily deployable in production.
PostgreSQL: For satisfying the database requirement, we use the open source object relational database management system (ORDBMS) PostgreSQL due to its robustness.
Nginx: The web server we use for serving our website is the open source software nginx. We use this due to its lightweight resource utilization and scalabilty. It also comes in handy for load balancing.
Markdown: To display the content on our webpage, we use Markdown. It allows us to write information using an easy-to-read and easy-to-write text format.

Storage/Services
AWS S3: To store our data, we use Amazon's Simple Storage Service (Amazon S3). It is a simple web service interface that we can use to store and retrieve any amount of data at any time from the web.
AWS EC2: To host our website we use Amazon's Elastic Cloud Computing (Amazon EC2). Amazon EC2 provides resizable compute capacity in the cloud. It is designed to make web-scale cloud computing easier for developers and allows maximum scalability and availability for websites and web applications hence paying only for what we use.

Code editing/version control
Vscode editor: For editing and debugging of our code, we use Visual Studio Code editor since it has features such as  syntax highlighting, intelligent code completion, snippets, code refactoring.
Github, git: For version control of our code, we make use of Git since it the most popular tool used for version controlling and for storing copies of our code on the web, we upload it to Github by creating a repository and uploading code on a regular basis until completion. 
Chrome: To view the frontend of our designed website, we use the Google Chrome web browser. Chrome is preferred due to the fast loading speed of websites.
Windows/Linux: All of the softwares are run on the Windows or the Linux operating systems.

Wipro password: paNWB2Ea*PfX@qS
mysql password: Goldcoin123/Goldcoin@123
